Token { lexeme: "fn", _type: Function, line: 1 }
Token { lexeme: "main", _type: Main, line: 1 }
Token { lexeme: "let", _type: Let, line: 1 }
Token { lexeme: "int", _type: Int, line: 1 }
Token { lexeme: "float", _type: Float, line: 1 }
Token { lexeme: "char", _type: Char, line: 1 }
Token { lexeme: "if", _type: If, line: 1 }
Token { lexeme: "else", _type: Else, line: 1 }
Token { lexeme: "while", _type: While, line: 1 }
Token { lexeme: "println", _type: Println, line: 1 }
Token { lexeme: "(", _type: LBracket, line: 3 }
Token { lexeme: ")", _type: RBracket, line: 3 }
Token { lexeme: "->", _type: Arrow, line: 3 }
Token { lexeme: ":", _type: Colon, line: 3 }
Token { lexeme: ",", _type: Comma, line: 3 }
Token { lexeme: "{", _type: LBrace, line: 3 }
Token { lexeme: "}", _type: RBrace, line: 3 }
Token { lexeme: ";", _type: PComma, line: 3 }
Token { lexeme: "=", _type: Attr, line: 5 }
Token { lexeme: "==", _type: EQ, line: 5 }
Token { lexeme: "!", _type: NEQ, line: 5 }
Token { lexeme: "=", _type: Attr, line: 5 }
Token { lexeme: ">", _type: GT, line: 5 }
Token { lexeme: ">=", _type: GE, line: 5 }
Token { lexeme: "<", _type: LT, line: 5 }
Token { lexeme: "<=", _type: LE, line: 5 }
Token { lexeme: "+", _type: Plus, line: 5 }
Token { lexeme: "-", _type: Minus, line: 5 }
Token { lexeme: "*", _type: Mult, line: 5 }
Token { lexeme: "/", _type: Div, line: 5 }
Token { lexeme: "345", _type: IntConst, line: 7 }
Token { lexeme: "234.56", _type: FloatConst, line: 7 }
Token { lexeme: "a", _type: CharConst, line: 7 }
Token { lexeme: "{}", _type: FormatString, line: 7 }
Token { lexeme: "", _type: EOF, line: -1 }
